{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;KArBS;AAuBT,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB;MAzBS","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/sidebar.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from './ui/button'\nimport { ScrollArea } from './ui/scroll-area'\nimport { Separator } from './ui/separator'\n\ninterface Message {\n  id: string\n  content: string\n  role: 'user' | 'assistant'\n  timestamp: Date\n}\n\ninterface Conversation {\n  id: string\n  title: string\n  messages: Message[]\n  lastUpdated: Date\n}\n\ninterface SidebarProps {\n  conversations: Conversation[]\n  currentConversationId: string | null\n  onNewChat: () => void\n  onSelectConversation: (id: string) => void\n  onToggleTheme: () => void\n  theme: 'light' | 'dark'\n  isCollapsed: boolean\n  onToggleCollapse: () => void\n}\n\nexport function Sidebar({\n  conversations,\n  currentConversationId,\n  onNewChat,\n  onSelectConversation,\n  onToggleTheme,\n  theme,\n  isCollapsed,\n  onToggleCollapse\n}: SidebarProps) {\n  return (\n    <div className={`\n      flex flex-col h-full bg-white dark:bg-black border-r border-gray-200 dark:border-gray-800\n      transition-all duration-300 ease-in-out\n      ${isCollapsed ? 'w-16' : 'w-64'}\n    `}>\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-800 flex-shrink-0\">\n        <div className=\"flex items-center justify-between mb-4\">\n          {!isCollapsed && (\n            <h2 className=\"text-lg font-semibold text-black dark:text-white\">ChatGPT Clone</h2>\n          )}\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onToggleTheme}\n              className=\"text-black dark:text-white hover:bg-gray-100 dark:hover:bg-gray-900 p-2\"\n            >\n              {theme === 'light' ? '⚫' : '⚪'}\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onToggleCollapse}\n              className=\"text-black dark:text-white hover:bg-gray-100 dark:hover:bg-gray-900 p-2\"\n            >\n              <svg \n                className={`w-4 h-4 transition-transform ${isCollapsed ? 'rotate-180' : ''}`} \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n              </svg>\n            </Button>\n          </div>\n        </div>\n        \n        {!isCollapsed && (\n          <Button \n            onClick={onNewChat}\n            className=\"w-full bg-black text-white hover:bg-gray-800 dark:bg-white dark:text-black dark:hover:bg-gray-200\"\n          >\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n            </svg>\n            New Chat\n          </Button>\n        )}\n        \n        {isCollapsed && (\n          <Button \n            onClick={onNewChat}\n            className=\"w-full bg-black text-white hover:bg-gray-800 dark:bg-white dark:text-black dark:hover:bg-gray-200 p-2\"\n            size=\"icon\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n            </svg>\n          </Button>\n        )}\n      </div>\n\n      {/* Navigation - only show when not collapsed */}\n      {!isCollapsed && (\n        <>\n          <div className=\"p-4 space-y-2 flex-shrink-0\">\n            <div className=\"flex items-center space-x-2 text-black dark:text-white hover:bg-gray-100 dark:hover:bg-gray-900 cursor-pointer p-2 rounded-lg transition-colors\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n              </svg>\n              <span className=\"text-sm\">Search chats</span>\n            </div>\n            \n            <div className=\"flex items-center space-x-2 text-black dark:text-white hover:bg-gray-100 dark:hover:bg-gray-900 cursor-pointer p-2 rounded-lg transition-colors\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n              <span className=\"text-sm\">Library</span>\n            </div>\n          </div>\n\n          <Separator className=\"mx-4\" />\n        </>\n      )}\n\n      {/* Conversations - only show when not collapsed */}\n      {!isCollapsed && (\n        <div className=\"flex-1 overflow-hidden\">\n          <div className=\"p-4 flex-shrink-0\">\n            <h3 className=\"text-xs font-medium text-black dark:text-white uppercase tracking-wider mb-2\">\n              Chats\n            </h3>\n          </div>\n          \n          <ScrollArea className=\"flex-1 px-4\">\n            <div className=\"space-y-1\">\n              {conversations.map((conversation) => (\n                <button\n                  key={conversation.id}\n                  onClick={() => onSelectConversation(conversation.id)}\n                  className={`\n                    w-full text-left p-3 rounded-lg transition-colors text-sm\n                    ${currentConversationId === conversation.id\n                      ? 'bg-black text-white dark:bg-white dark:text-black'\n                      : 'text-black dark:text-white hover:bg-gray-100 dark:hover:bg-gray-900'\n                    }\n                  `}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                    </svg>\n                    <span className=\"truncate\">{conversation.title}</span>\n                  </div>\n                </button>\n              ))}\n            </div>\n          </ScrollArea>\n        </div>\n      )}\n\n      {/* Collapsed state - show icons only */}\n      {isCollapsed && (\n        <div className=\"flex-1 flex flex-col items-center py-4 space-y-4\">\n          {conversations.slice(0, 5).map((conversation) => (\n            <button\n              key={conversation.id}\n              onClick={() => onSelectConversation(conversation.id)}\n              className={`\n                w-10 h-10 rounded-lg flex items-center justify-center transition-colors\n                ${currentConversationId === conversation.id\n                  ? 'bg-black text-white dark:bg-white dark:text-black'\n                  : 'text-black dark:text-white hover:bg-gray-100 dark:hover:bg-gray-900'\n                }\n              `}\n              title={conversation.title}\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n              </svg>\n            </button>\n          ))}\n        </div>\n      )}\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-800 flex-shrink-0\">\n        <div className=\"flex items-center space-x-2 text-black dark:text-white hover:bg-gray-100 dark:hover:bg-gray-900 cursor-pointer p-2 rounded-lg transition-colors\">\n          <div className=\"w-6 h-6 bg-black text-white dark:bg-white dark:text-black rounded-full flex items-center justify-center text-xs font-medium\">\n            U\n          </div>\n          {!isCollapsed && <span className=\"text-sm\">User</span>}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 629, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/chat-area.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef } from 'react'\nimport { ScrollArea } from './ui/scroll-area'\n\ninterface Message {\n  id: string\n  content: string\n  role: 'user' | 'assistant'\n  timestamp: Date\n}\n\ninterface ChatAreaProps {\n  messages: Message[]\n  isTyping: boolean\n}\n\nexport function ChatArea({ messages, isTyping }: ChatAreaProps) {\n  const scrollAreaRef = useRef<HTMLDivElement>(null)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }, [messages, isTyping])\n\n  const formatTime = (date: Date) => {\n    return new Intl.DateTimeFormat('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(date)\n  }\n\n  if (messages.length === 0 && !isTyping) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center bg-white dark:bg-gray-900\">\n        <div className=\"text-center max-w-md mx-auto px-4\">\n          <div className=\"w-16 h-16 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <svg className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-2\">\n            What can I help with?\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            Start a conversation by typing a message below.\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex-1 bg-white dark:bg-gray-900\">\n      <ScrollArea className=\"h-full\" ref={scrollAreaRef}>\n        <div className=\"max-w-3xl mx-auto px-4 py-6 space-y-6\">\n          {messages.map((message) => (\n            <div\n              key={message.id}\n              className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n            >\n              <div className={`flex max-w-[80%] ${message.role === 'user' ? 'flex-row-reverse' : 'flex-row'}`}>\n                {/* Avatar */}\n                <div className={`flex-shrink-0 ${message.role === 'user' ? 'ml-3' : 'mr-3'}`}>\n                  <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                    message.role === 'user'\n                      ? 'bg-blue-600 text-white'\n                      : 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200'\n                  }`}>\n                    {message.role === 'user' ? 'U' : 'AI'}\n                  </div>\n                </div>\n\n                {/* Message bubble */}\n                <div className=\"flex flex-col\">\n                  <div className={`px-4 py-3 rounded-2xl ${\n                    message.role === 'user'\n                      ? 'bg-blue-600 text-white rounded-br-md'\n                      : 'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white rounded-bl-md'\n                  }`}>\n                    <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">\n                      {message.content}\n                    </p>\n                  </div>\n                  <div className={`text-xs text-gray-500 dark:text-gray-400 mt-1 ${\n                    message.role === 'user' ? 'text-right' : 'text-left'\n                  }`}>\n                    {formatTime(message.timestamp)}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          {/* Typing indicator */}\n          {isTyping && (\n            <div className=\"flex justify-start\">\n              <div className=\"flex max-w-[80%]\">\n                <div className=\"flex-shrink-0 mr-3\">\n                  <div className=\"w-8 h-8 rounded-full bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 flex items-center justify-center text-sm font-medium\">\n                    AI\n                  </div>\n                </div>\n                <div className=\"bg-gray-100 dark:bg-gray-800 px-4 py-3 rounded-2xl rounded-bl-md\">\n                  <div className=\"flex space-x-1\">\n                    <div className=\"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\"></div>\n                    <div className=\"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                    <div className=\"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div ref={messagesEndRef} />\n        </div>\n      </ScrollArea>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAiBO,SAAS,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAiB;;IAC5D,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC7C,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,eAAe,OAAO,EAAE,eAAe;gBAAE,UAAU;YAAS;QAC9D;6BAAG;QAAC;QAAU;KAAS;IAEvB,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;YACtC,MAAM;YACN,QAAQ;QACV,GAAG,MAAM,CAAC;IACZ;IAEA,IAAI,SAAS,MAAM,KAAK,KAAK,CAAC,UAAU;QACtC,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;4BAA2C,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCAClG,cAAA,6LAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;kCAGzE,6LAAC;wBAAG,WAAU;kCAA4D;;;;;;kCAG1E,6LAAC;wBAAE,WAAU;kCAAmC;;;;;;;;;;;;;;;;;IAMxD;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,6IAAA,CAAA,aAAU;YAAC,WAAU;YAAS,KAAK;sBAClC,cAAA,6LAAC;gBAAI,WAAU;;oBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;4BAEC,WAAW,CAAC,KAAK,EAAE,QAAQ,IAAI,KAAK,SAAS,gBAAgB,iBAAiB;sCAE9E,cAAA,6LAAC;gCAAI,WAAW,CAAC,iBAAiB,EAAE,QAAQ,IAAI,KAAK,SAAS,qBAAqB,YAAY;;kDAE7F,6LAAC;wCAAI,WAAW,CAAC,cAAc,EAAE,QAAQ,IAAI,KAAK,SAAS,SAAS,QAAQ;kDAC1E,cAAA,6LAAC;4CAAI,WAAW,CAAC,0EAA0E,EACzF,QAAQ,IAAI,KAAK,SACb,2BACA,qEACJ;sDACC,QAAQ,IAAI,KAAK,SAAS,MAAM;;;;;;;;;;;kDAKrC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAW,CAAC,sBAAsB,EACrC,QAAQ,IAAI,KAAK,SACb,yCACA,4EACJ;0DACA,cAAA,6LAAC;oDAAE,WAAU;8DACV,QAAQ,OAAO;;;;;;;;;;;0DAGpB,6LAAC;gDAAI,WAAW,CAAC,8CAA8C,EAC7D,QAAQ,IAAI,KAAK,SAAS,eAAe,aACzC;0DACC,WAAW,QAAQ,SAAS;;;;;;;;;;;;;;;;;;2BA7B9B,QAAQ,EAAE;;;;;oBAqClB,0BACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;kDAA8I;;;;;;;;;;;8CAI/J,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;;;;;0DACf,6LAAC;gDAAI,WAAU;gDAAmE,OAAO;oDAAE,gBAAgB;gDAAO;;;;;;0DAClH,6LAAC;gDAAI,WAAU;gDAAmE,OAAO;oDAAE,gBAAgB;gDAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO5H,6LAAC;wBAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;AAKpB;GAtGgB;KAAA","debugId":null}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/input-area.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useRef } from 'react'\nimport { Button } from './ui/button'\nimport { Textarea } from './ui/textarea'\n\ninterface InputAreaProps {\n  onSendMessage: (message: string) => void\n  disabled?: boolean\n}\n\nexport function InputArea({ onSendMessage, disabled }: InputAreaProps) {\n  const [input, setInput] = useState('')\n  const textareaRef = useRef<HTMLTextAreaElement>(null)\n\n  const handleSend = () => {\n    if (input.trim() && !disabled) {\n      onSendMessage(input.trim())\n      setInput('')\n      if (textareaRef.current) {\n        textareaRef.current.style.height = 'auto'\n      }\n    }\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSend()\n    }\n  }\n\n  const handleInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInput(e.target.value)\n    \n    // Auto-resize textarea\n    const textarea = e.target\n    textarea.style.height = 'auto'\n    textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px'\n  }\n\n  return (\n    <div className=\"border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900\">\n      <div className=\"max-w-3xl mx-auto px-4 py-4\">\n        <div className=\"flex items-end space-x-2\">\n          <div className=\"flex-1\">\n            <Textarea\n              ref={textareaRef}\n              value={input}\n              onChange={handleInput}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Message ChatGPT...\"\n              disabled={disabled}\n              className=\"min-h-[40px] max-h-[120px] resize-none bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-700 focus-visible:ring-0 focus-visible:ring-offset-0\"\n              rows={1}\n            />\n          </div>\n          <Button\n            onClick={handleSend}\n            disabled={!input.trim() || disabled}\n            className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 dark:disabled:bg-gray-600\"\n            size=\"icon\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n            </svg>\n          </Button>\n        </div>\n        \n        <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-2 text-center\">\n          ChatGPT can make mistakes. Consider checking important information.\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAWO,SAAS,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAkB;;IACnE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAuB;IAEhD,MAAM,aAAa;QACjB,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU;YAC7B,cAAc,MAAM,IAAI;YACxB,SAAS;YACT,IAAI,YAAY,OAAO,EAAE;gBACvB,YAAY,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG;YACrC;QACF;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,SAAS,EAAE,MAAM,CAAC,KAAK;QAEvB,uBAAuB;QACvB,MAAM,WAAW,EAAE,MAAM;QACzB,SAAS,KAAK,CAAC,MAAM,GAAG;QACxB,SAAS,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,SAAS,YAAY,EAAE,OAAO;IACjE;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gCACP,KAAK;gCACL,OAAO;gCACP,UAAU;gCACV,WAAW;gCACX,aAAY;gCACZ,UAAU;gCACV,WAAU;gCACV,MAAM;;;;;;;;;;;sCAGV,6LAAC,qIAAA,CAAA,SAAM;4BACL,SAAS;4BACT,UAAU,CAAC,MAAM,IAAI,MAAM;4BAC3B,WAAU;4BACV,MAAK;sCAEL,cAAA,6LAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;8BAK3E,6LAAC;oBAAI,WAAU;8BAA4D;;;;;;;;;;;;;;;;;AAMnF;GAhEgB;KAAA","debugId":null}},
    {"offset": {"line": 1071, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/theme-provider.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useEffect, useState } from 'react'\n\ntype Theme = 'dark' | 'light'\n\ntype ThemeProviderProps = {\n  children: React.ReactNode\n  defaultTheme?: Theme\n  storageKey?: string\n}\n\ntype ThemeProviderState = {\n  theme: Theme\n  setTheme: (theme: Theme) => void\n}\n\nconst initialState: ThemeProviderState = {\n  theme: 'light',\n  setTheme: () => null,\n}\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState)\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = 'light',\n  storageKey = 'chat-theme',\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(defaultTheme)\n\n  useEffect(() => {\n    const stored = localStorage.getItem(storageKey) as Theme\n    if (stored) {\n      setTheme(stored)\n    }\n  }, [storageKey])\n\n  useEffect(() => {\n    const root = window.document.documentElement\n    root.classList.remove('light', 'dark')\n    root.classList.add(theme)\n  }, [theme])\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme)\n      setTheme(theme)\n    },\n  }\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext)\n  if (context === undefined)\n    throw new Error('useTheme must be used within a ThemeProvider')\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAiBA,MAAM,eAAmC;IACvC,OAAO;IACP,UAAU,IAAM;AAClB;AAEA,MAAM,qCAAuB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAsB;AAExD,SAAS,cAAc,EAC5B,QAAQ,EACR,eAAe,OAAO,EACtB,aAAa,YAAY,EACzB,GAAG,OACgB;;IACnB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS;IAE1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,SAAS,aAAa,OAAO,CAAC;YACpC,IAAI,QAAQ;gBACV,SAAS;YACX;QACF;kCAAG;QAAC;KAAW;IAEf,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,OAAO,OAAO,QAAQ,CAAC,eAAe;YAC5C,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS;YAC/B,KAAK,SAAS,CAAC,GAAG,CAAC;QACrB;kCAAG;QAAC;KAAM;IAEV,MAAM,QAAQ;QACZ;QACA,UAAU,CAAC;YACT,aAAa,OAAO,CAAC,YAAY;YACjC,SAAS;QACX;IACF;IAEA,qBACE,6LAAC,qBAAqB,QAAQ;QAAE,GAAG,KAAK;QAAE,OAAO;kBAC9C;;;;;;AAGP;GAlCgB;KAAA;AAoCT,MAAM,WAAW;;IACtB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WACd,MAAM,IAAI,MAAM;IAClB,OAAO;AACT;IALa","debugId":null}},
    {"offset": {"line": 1145, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/chat-interface.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useRef, useEffect } from 'react'\nimport { Sidebar } from './sidebar'\nimport { ChatArea } from './chat-area'\nimport { InputArea } from './input-area'\nimport { useTheme } from './theme-provider'\nimport { Button } from './ui/button'\n\ninterface Message {\n  id: string\n  content: string\n  role: 'user' | 'assistant'\n  timestamp: Date\n}\n\ninterface Conversation {\n  id: string\n  title: string\n  messages: Message[]\n  lastUpdated: Date\n}\n\nexport function ChatInterface() {\n  const [conversations, setConversations] = useState<Conversation[]>([])\n  const [currentConversationId, setCurrentConversationId] = useState<string | null>(null)\n  const [messages, setMessages] = useState<Message[]>([])\n  const [isTyping, setIsTyping] = useState(false)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false)\n  const { theme, setTheme } = useTheme()\n\n  useEffect(() => {\n    // Load conversations from localStorage\n    const savedConversations = localStorage.getItem('chat-conversations')\n    if (savedConversations) {\n      const parsed = JSON.parse(savedConversations)\n      setConversations(parsed)\n      if (parsed.length > 0 && !currentConversationId) {\n        setCurrentConversationId(parsed[0].id)\n        setMessages(parsed[0].messages)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    // Save conversations to localStorage\n    if (conversations.length > 0) {\n      localStorage.setItem('chat-conversations', JSON.stringify(conversations))\n    }\n  }, [conversations])\n\n  const createNewConversation = () => {\n    const newConversation: Conversation = {\n      id: Date.now().toString(),\n      title: 'New Chat',\n      messages: [],\n      lastUpdated: new Date(),\n    }\n    setConversations(prev => [newConversation, ...prev])\n    setCurrentConversationId(newConversation.id)\n    setMessages([])\n  }\n\n  const selectConversation = (conversationId: string) => {\n    const conversation = conversations.find(c => c.id === conversationId)\n    if (conversation) {\n      setCurrentConversationId(conversationId)\n      setMessages(conversation.messages)\n    }\n  }\n\n  const sendMessage = async (content: string) => {\n    if (!content.trim()) return\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content,\n      role: 'user',\n      timestamp: new Date(),\n    }\n\n    // Add user message\n    const newMessages = [...messages, userMessage]\n    setMessages(newMessages)\n\n    // Update conversation\n    updateConversation(newMessages)\n\n    // Show typing indicator\n    setIsTyping(true)\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: generateAIResponse(content),\n        role: 'assistant',\n        timestamp: new Date(),\n      }\n\n      const finalMessages = [...newMessages, aiMessage]\n      setMessages(finalMessages)\n      updateConversation(finalMessages)\n      setIsTyping(false)\n    }, 1000 + Math.random() * 2000)\n  }\n\n  const updateConversation = (newMessages: Message[]) => {\n    if (!currentConversationId) return\n\n    setConversations(prev => prev.map(conv => {\n      if (conv.id === currentConversationId) {\n        const title = newMessages.length > 0 ? \n          newMessages[0].content.slice(0, 30) + (newMessages[0].content.length > 30 ? '...' : '') :\n          'New Chat'\n        \n        return {\n          ...conv,\n          title,\n          messages: newMessages,\n          lastUpdated: new Date(),\n        }\n      }\n      return conv\n    }))\n  }\n\n  const generateAIResponse = (userMessage: string): string => {\n    const responses = [\n      \"I understand your question. Let me help you with that.\",\n      \"That's an interesting point. Here's what I think about it...\",\n      \"I'd be happy to assist you with this topic.\",\n      \"Based on what you've asked, I can provide some insights.\",\n      \"Let me break this down for you step by step.\",\n      \"That's a great question! Here's my perspective on it.\",\n    ]\n    \n    return responses[Math.floor(Math.random() * responses.length)] + \n           \" This is a simulated response for demonstration purposes. In a real implementation, this would connect to an actual AI service.\";\n  }\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light')\n  }\n\n  const toggleSidebarCollapse = () => {\n    setSidebarCollapsed(!sidebarCollapsed)\n  }\n\n  return (\n    <div className=\"flex h-screen bg-white dark:bg-gray-900 transition-colors\">\n      {/* Mobile sidebar overlay */}\n      {sidebarOpen && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className={`\n        fixed lg:relative inset-y-0 left-0 z-50 transform transition-transform duration-300 ease-in-out\n        ${sidebarOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'}\n      `}>\n        <Sidebar\n          conversations={conversations}\n          currentConversationId={currentConversationId}\n          onNewChat={createNewConversation}\n          onSelectConversation={selectConversation}\n          onToggleTheme={toggleTheme}\n          theme={theme}\n          isCollapsed={sidebarCollapsed}\n          onToggleCollapse={toggleSidebarCollapse}\n        />\n      </div>\n\n      {/* Main content */}\n      <div className=\"flex-1 flex flex-col min-w-0\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 lg:hidden\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setSidebarOpen(true)}\n            className=\"text-gray-600 dark:text-gray-300\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n            </svg>\n          </Button>\n          <h1 className=\"text-lg font-semibold text-gray-900 dark:text-white\">ChatGPT Clone</h1>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={toggleTheme}\n            className=\"text-gray-600 dark:text-gray-300\"\n          >\n            {theme === 'light' ? '🌙' : '☀️'}\n          </Button>\n        </div>\n\n        {/* Desktop collapse button */}\n        <div className=\"hidden lg:flex items-center justify-between p-2 border-b border-gray-200 dark:border-gray-700\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={toggleSidebarCollapse}\n            className=\"text-gray-600 dark:text-gray-300\"\n          >\n            <svg \n              className={`w-4 h-4 transition-transform ${sidebarCollapsed ? 'rotate-180' : ''}`} \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n            </svg>\n          </Button>\n        </div>\n\n        {/* Chat area */}\n        <div className=\"flex-1 flex flex-col min-h-0\">\n          <ChatArea messages={messages} isTyping={isTyping} />\n          <InputArea onSendMessage={sendMessage} disabled={isTyping} />\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AAuBO,SAAS;;IACd,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IACrE,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,WAAQ,AAAD;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,uCAAuC;YACvC,MAAM,qBAAqB,aAAa,OAAO,CAAC;YAChD,IAAI,oBAAoB;gBACtB,MAAM,SAAS,KAAK,KAAK,CAAC;gBAC1B,iBAAiB;gBACjB,IAAI,OAAO,MAAM,GAAG,KAAK,CAAC,uBAAuB;oBAC/C,yBAAyB,MAAM,CAAC,EAAE,CAAC,EAAE;oBACrC,YAAY,MAAM,CAAC,EAAE,CAAC,QAAQ;gBAChC;YACF;QACF;kCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,qCAAqC;YACrC,IAAI,cAAc,MAAM,GAAG,GAAG;gBAC5B,aAAa,OAAO,CAAC,sBAAsB,KAAK,SAAS,CAAC;YAC5D;QACF;kCAAG;QAAC;KAAc;IAElB,MAAM,wBAAwB;QAC5B,MAAM,kBAAgC;YACpC,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,OAAO;YACP,UAAU,EAAE;YACZ,aAAa,IAAI;QACnB;QACA,iBAAiB,CAAA,OAAQ;gBAAC;mBAAoB;aAAK;QACnD,yBAAyB,gBAAgB,EAAE;QAC3C,YAAY,EAAE;IAChB;IAEA,MAAM,qBAAqB,CAAC;QAC1B,MAAM,eAAe,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACtD,IAAI,cAAc;YAChB,yBAAyB;YACzB,YAAY,aAAa,QAAQ;QACnC;IACF;IAEA,MAAM,cAAc,OAAO;QACzB,IAAI,CAAC,QAAQ,IAAI,IAAI;QAErB,MAAM,cAAuB;YAC3B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB;YACA,MAAM;YACN,WAAW,IAAI;QACjB;QAEA,mBAAmB;QACnB,MAAM,cAAc;eAAI;YAAU;SAAY;QAC9C,YAAY;QAEZ,sBAAsB;QACtB,mBAAmB;QAEnB,wBAAwB;QACxB,YAAY;QAEZ,uBAAuB;QACvB,WAAW;YACT,MAAM,YAAqB;gBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,QAAQ;gBAC7B,SAAS,mBAAmB;gBAC5B,MAAM;gBACN,WAAW,IAAI;YACjB;YAEA,MAAM,gBAAgB;mBAAI;gBAAa;aAAU;YACjD,YAAY;YACZ,mBAAmB;YACnB,YAAY;QACd,GAAG,OAAO,KAAK,MAAM,KAAK;IAC5B;IAEA,MAAM,qBAAqB,CAAC;QAC1B,IAAI,CAAC,uBAAuB;QAE5B,iBAAiB,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA;gBAChC,IAAI,KAAK,EAAE,KAAK,uBAAuB;oBACrC,MAAM,QAAQ,YAAY,MAAM,GAAG,IACjC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,QAAQ,EAAE,IACtF;oBAEF,OAAO;wBACL,GAAG,IAAI;wBACP;wBACA,UAAU;wBACV,aAAa,IAAI;oBACnB;gBACF;gBACA,OAAO;YACT;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,MAAM,YAAY;YAChB;YACA;YACA;YACA;YACA;YACA;SACD;QAED,OAAO,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE,GACvD;IACT;IAEA,MAAM,cAAc;QAClB,SAAS,UAAU,UAAU,SAAS;IACxC;IAEA,MAAM,wBAAwB;QAC5B,oBAAoB,CAAC;IACvB;IAEA,qBACE,6LAAC;QAAI,WAAU;;YAEZ,6BACC,6LAAC;gBACC,WAAU;gBACV,SAAS,IAAM,eAAe;;;;;;0BAKlC,6LAAC;gBAAI,WAAW,CAAC;;QAEf,EAAE,cAAc,kBAAkB,qCAAqC;MACzE,CAAC;0BACC,cAAA,6LAAC,gIAAA,CAAA,UAAO;oBACN,eAAe;oBACf,uBAAuB;oBACvB,WAAW;oBACX,sBAAsB;oBACtB,eAAe;oBACf,OAAO;oBACP,aAAa;oBACb,kBAAkB;;;;;;;;;;;0BAKtB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,IAAM,eAAe;gCAC9B,WAAU;0CAEV,cAAA,6LAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;0CAGzE,6LAAC;gCAAG,WAAU;0CAAsD;;;;;;0CACpE,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,WAAU;0CAET,UAAU,UAAU,OAAO;;;;;;;;;;;;kCAKhC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC;gCACC,WAAW,CAAC,6BAA6B,EAAE,mBAAmB,eAAe,IAAI;gCACjF,MAAK;gCACL,QAAO;gCACP,SAAQ;0CAER,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;kCAM3E,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,qIAAA,CAAA,WAAQ;gCAAC,UAAU;gCAAU,UAAU;;;;;;0CACxC,6LAAC,sIAAA,CAAA,YAAS;gCAAC,eAAe;gCAAa,UAAU;;;;;;;;;;;;;;;;;;;;;;;;AAK3D;GA9MgB;;QAOc,0IAAA,CAAA,WAAQ;;;KAPtB","debugId":null}},
    {"offset": {"line": 1473, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from 'react'\nimport { ChatInterface } from '@/components/chat-interface'\nimport { ThemeProvider } from '@/components/theme-provider'\n\nexport default function Home() {\n  return (\n    <ThemeProvider>\n      <ChatInterface />\n    </ThemeProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMe,SAAS;IACtB,qBACE,6LAAC,0IAAA,CAAA,gBAAa;kBACZ,cAAA,6LAAC,0IAAA,CAAA,gBAAa;;;;;;;;;;AAGpB;KANwB","debugId":null}}]
}